{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/reducers/hotel.js","webpack:///./src/components/main/index.js","webpack:///./kit/lib/routing.js","webpack:///./src/components/hotelList.js","webpack:///./static/img ^\\.\\/.*$","webpack:///./static/img/bellagio.jpg","webpack:///./static/img/boston.jpg","webpack:///./static/img/carlos.jpg","webpack:///./static/img/poseidon.jpg","webpack:///./static/img/safari.jpg","webpack:///./src/components/filterSection.js","webpack:///./src/actions/index.js","webpack:///./src/styles.global.css","webpack:///./kit/lib/apollo.js","webpack:///./kit/lib/env.js","webpack:///./kit/lib/redux.js","webpack:///./kit/config.js","webpack:///./src/components/hotel.scss","webpack:///./src/data/data.js","webpack:///./kit/entry/browser.js"],"names":["config","addReducer","enableGraphQLServer","cert","require","enableSSL","key","setGraphQLSchema","default","addGetRoute","ctx","stateDump","JSON","stringify","store","getState","body","set404Handler","status","setErrorHandler","e","console","log","message","getKoaApp","app","context","engine","on","error","addMiddleware","next","set","dispatch","type","reducer","state","action","name","length","filter","reg","RegExp","hotel","match","concat","Immutable","sort","a","b","rating","css","content","Status","props","code","children","staticContext","React","PureComponent","propTypes","PropTypes","number","isRequired","node","defaultProps","NotFound","Redirect","to","from","push","permanent","oneOfType","string","object","bool","HotelList","connect","hotels","getRange","starCount","i","map","star","index","color","uuid","hotelItem","hotelCover","background","cover","hotelInfo","setRef","ref","handleFindHotel","findByName","value","setState","clearBtn","handleClearSearch","handleSortByRaitingASK","sortByRaitingASK","sortByRaiting","handleSortByRaitingDESC","sortByRaitingDESC","filterSection","searchSection","searchBtn","sortSection","btn","sortIcon","createClient","opt","Object","assign","reduxRootSelector","apollo","apolloClientOptions","getNetworkInterface","uri","networkInterface","createNetworkInterface","opts","apolloNetworkOptions","use","apolloMiddleware","applyMiddleware","f","useAfter","apolloAfterware","applyAfterware","browserClient","graphQLServer","getServerURL","graphQLEndpoint","host","port","allowSSL","stub","hasState","window","__STATE__","unwind","r","reducers","arr","defaultReducer","initialState","keys","createNewStore","apolloClient","createStore","combineReducers","compose","middleware","__REDUX_DEVTOOLS_EXTENSION__","Common","Map","Error","endpoint","graphiQL","middlewareFunc","afterwareFunc","Config","routes","Set","koaAppFunc","enableHTTP","enableForceSSL","sslOptions","graphQLSchema","enableBodyParser","bodyParserOptions","corsOptions","func","handler404","errorHandler","add","method","route","handlers","addRoute","schema","v4","client","doRender","ReactDOM","hydrate","document","getElementById","Root","Chain","AppContainer","module","hot","accept"],"mappings":"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","file":"browser.js","sourcesContent":["// Your app's entry point.  Every ReactQL projects requires 'src/app.js',\n// which both the server and browser will import.\n//\n// In this file, you'll do two things:\n//\n// 1.  Import `kit/config`, and configure your app.  In this example, I'm\n// adding a custom Redux reducer that acts as a simple counter, and enabling\n// a built-in GraphQL server that imports a schema for a simple message.\n//\n// 2.  Export the root React component that goes between <div id=\"main\"/>\n// in the server-side HTML.\n\n// ----------------------\n// IMPORTS\n\n\n/* ReactQL */\n\n// Config API, for adding reducers and configuring our ReactQL app\nimport config from 'kit/config';\n\n/* App */\n\n// Example counter reducer.  This simply increments the counter by +1\nimport hotelReducer from 'src/reducers/hotel';\n\n// Main component -- i.e. the 'root' React component in our app\nimport Main from 'src/components/main';\n\nimport data from './data/data.js';\n\n// Init global styles.  These will be added to the resulting CSS automatically\n// without any class hashing.  Use this to include default or framework CSS.\nimport './styles.global.css';\n\n\n/* REDUCERS */\nconfig.addReducer('hotels', hotelReducer, data);\n\n/* GRAPHQL */\n\n// Enable the internal GraphQL server.  This will do two things:\n//\n// 1.  On the server, it will set-up the necessary route handlers to 'listen'\n// to incoming GraphQL requests on `/graphql`, as well as (by default) set-up\n// the GraphiQL IDE\n//\n// 2.  On the client, it will append the correct server URL so that we can\n// call the ReactQL host properly, and let the server handle our requests\nconfig.enableGraphQLServer();\n\n\n/* SERVER */\n\n// Set our server config, by checking `SERVER` -- this code path will be\n// eliminated by Webpack in the browser, so we can safely add this.\n\nif (SERVER) {\n  /* SSL */\n\n  // By default, the Koa web server runs on a plain HTTP server. However,\n  // you can easily enable HTTPS.  In the following commands, I grab a sample\n  // self-signed key/cert combo and call `config.enableSSL()` with the options\n  // I want to pass to the `https.createServer()` that happens under the hood.\n  //\n  // Note: Running https:// in your browser using this self-signed cert will\n  // undoubtably raise a security error. But at least we can see it's working.\n  //\n  // Production note: I generally recommend using a dedicated upstream proxy\n  // such as Nginx to handle HTTPS traffic, since the TLS handshake will likely\n  // be faster, and you can add HTTP/2 and have much finer-grain control over\n  // HTTP. But, if you need a fast SSL service, ReactQL has you covered!\n\n  /*\n    Uncomment the next two lines to enable SSL!\n  */\n\n  const cert = require('src/cert/self_signed');\n  config.enableSSL({ key: cert.key, cert: cert.cert });\n\n  // If wanted, you could also run an *SSL-only* server by uncommenting:\n  // config.disableHTTP();\n\n  // Or, you could automatically redirect non-HTTP traffic to SSL by\n  // uncommenting the following: (Note: pass { port: 8081 }) for development\n  // or { port: 4000 } for the default production port\n  // config.forceSSL({ port: 8081 });\n\n  /* GRAPHQL SCHEMA */\n  // Pass in the schema to use for our internal GraphQL server.  Note we're\n  // doing this inside a `SERVER` block to avoid importing a potentially large\n  // file, which would then inflate our client bundle unnecessarily\n  config.setGraphQLSchema(require('src/graphql/schema').default);\n\n  /* CUSTOM ROUTES */\n\n  // We can add custom routes to the web server easily, by using\n  // `config.add<Get|Post|Put|Patch>Route()`.  Note:  These are server routes only.\n  config.addGetRoute('/test', async ctx => {\n    // For demo purposes, let's get a JSON dump of the current Redux state\n    // to see that we can expect its contents\n    const stateDump = JSON.stringify(ctx.store.getState());\n\n    // Display a simple message, along with the Redux dump.  Note that this\n    // won't contain a full `apollo` response, because it hasn't passed through\n    // the React handler -- but it *does* mean we can still manipulate the state\n    // from within our root, or fire action handlers!\n    ctx.body = `Hello from your ReactQL route. Redux dump: ${stateDump}`;\n  });\n\n  /* CUSTOM 404 HANDLER */\n\n  // By default, if the server gets a route request that results in a 404,\n  // it will set `ctx.status = 404` but continue to render the <NotFound>\n  // block as normal.  If we want to add our own custom handler, we can use\n  // `config.set404Handler()` as below.\n  //\n  // Note:  This only applies to SERVER routes.  On the client, the\n  // <NotFound> block will *always* run.\n\n  config.set404Handler(ctx => {\n    // Like above, we'll grab a dump of the store state again -- this time,\n    // it *will* contain a full `apollo` dump because in order to figure out that\n    // a route has hit a 404, it will already have rendered the React chain\n    // and retrieved any relevant GraphQL\n    const stateDump = JSON.stringify(ctx.store.getState());\n\n    // Explicitly set the return status to 404.  This is done for us by\n    // default if we don't have a custom 404 handler, but left to the function\n    // otherwise (since we might not always want to return a 404)\n    ctx.status = 404;\n\n    // Set the body\n    ctx.body = `This route does not exist on the server - Redux dump: ${stateDump}`;\n  });\n\n  /* CUSTOM ERROR HANDLER */\n\n  // By default, any exceptions thrown anywhere in the middleware chain\n  // (including inside the `createReactHandler` func) will propogate up the\n  // call stack to a default error handler that simply logs the message and\n  // informs the user that there's an error.  We can override that default\n  // behaviour with a func with a (e, ctx, next) -> {} signature, where `e` is\n  // the error thrown, `ctx` is the Koa context object, and `next()` should\n  // be called if you want to recover from the error and continue processing\n  // subsequent middleware.  Great for logging to third-party tools, tc.\n  config.setErrorHandler((e, ctx /* `next` is unused in this example */) => {\n    // Mimic the default behaviour with an overriden message, so we know it's\n    // working\n    // eslint-disable-next-line no-console\n    console.log('Error: ', e.message);\n    ctx.body = 'Some kind of error. Check your source code.';\n  });\n\n  /* CUSTOM KOA APP INSTANTIATION */\n\n  // If you need to do something with `app` outside of middleware/routing,\n  // you can pass a func to `config.getKoaApp()` that will be fed the `app`\n  // instance directly.\n  config.getKoaApp(app => {\n    // First, we'll add a new `engine` key to the app.context`\n    // prototype (that per-request `ctx` extends) that can be\n    // used in the middleware below, to set a `Powered-By` header.\n    // eslint-disable-next-line no-param-reassign\n    app.context.engine = 'ReactQL';\n\n    // We'll also add a generic error handler, that prints out to the console.\n    // Note: This is a 'lower-level' than `config.setErrorHandler()` because\n    // it's not middleware -- it's for errors that happen at the server level\n    app.on('error', e => {\n      // This function should never show up, because `config.setErrorHandler()`\n      // is already catching errors -- but just an FYI for what you might do.\n      // eslint-disable-next-line no-console\n      console.error('Server error:', e);\n    });\n  });\n\n  /* CUSTOM MIDDLEWARE */\n\n  // We can set custom middleware to be processed on the server.  This gives us\n  // fine-grain control over headers, requests, responses etc, and even decide\n  // if we want to avoid the React handler until certain conditions\n  config.addMiddleware(async (ctx, next) => {\n    // Let's add a custom header so we can see middleware in action\n    ctx.set('Powered-By', ctx.engine); // <-- `ctx.engine` srt above!\n\n    // For the fun of it, let's demonstrate that we can fire Redux actions\n    // and it'll manipulate the state on the server side!  View the SSR version\n    // to see that the counter is now 1 and has been passed down the wire\n    ctx.store.dispatch({ type: 'INCREMENT_COUNTER' });\n\n    // Always return `next()`, otherwise the request won't 'pass' to the next\n    // middleware in the stack (likely, the React handler)\n    return next();\n  });\n}\n\n// In app.js, we need to export the root component we want to mount as the\n// starting point to our app.  We'll just export the `<Main>` component.\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import initialState from '../data/data.js';\r\nimport Immutable from 'seamless-immutable';\r\n\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n      case 'FIND_BY_NAME':\r\n        if(action.name.length) {\r\n          return state.filter(hotel =>  {\r\n            let reg = new RegExp(action.name, \"i\");\r\n            return hotel.name.match(reg);\r\n          });\r\n        } else {\r\n          return initialState;\r\n        }\r\n      case 'SORT_BY_RAITING_ASK':\r\n        return [].concat(Immutable(state)).sort((a,b) => a.rating - b.rating);\r\n      case 'SORT_BY_RAITING_DESC':\r\n        return [].concat(Immutable(state)).sort((a,b) => b.rating - a.rating);\r\n    }\r\n  return state;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/hotel.js","// IMPORTS\n\n// React\nimport React from 'react';\n\n// Routing via React Router\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// <Helmet> component for setting the page title/meta tags\nimport Helmet from 'react-helmet';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport { Redirect } from 'kit/lib/routing';\n\nimport HotelList from 'src/components/hotelList.js';\nimport FilterSection from 'src/components/filterSection.js'\n\n// Styles\nimport css from '../hotel.scss';\n\nexport default () => (\n  <div className={css.content}>\n    <FilterSection />\n    <HotelList />\n  </div>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index.js","/* eslint-disable no-param-reassign */\n\n// ----------------------\n// IMPORTS\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect as ReactRouterRedirect } from 'react-router-dom';\n\n// ----------------------\n\n// <Status code=\"xxx\"> component.  Updates the context router's context, which\n// can be used by the server handler to respond to the status on the server.\nclass Status extends React.PureComponent {\n  static propTypes = {\n    code: PropTypes.number.isRequired,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { code, children } = this.props;\n    return (\n      <Route render={({ staticContext }) => {\n        if (staticContext) {\n          staticContext.status = code;\n        }\n        return children;\n      }} />\n    );\n  }\n}\n\n// <NotFound> component.  If this renders on the server in development mode,\n// it will attempt to proxyify the request to the upstream `webpack-dev-server`.\n// In production, it will issue a hard 404 and render.  In the browser, it will\n// simply render.\nexport class NotFound extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Status code={404}>\n        {children}\n      </Status>\n    );\n  }\n}\n\n// <Redirect> component. Mirrors React Router's component by the same name,\n// except it sets a 301/302 status code for setting server-side HTTP headers.\nexport class Redirect extends React.PureComponent {\n  static propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n    from: PropTypes.string,\n    push: PropTypes.bool,\n    permanent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    from: null,\n    push: false,\n    permanent: false,\n  }\n\n  render() {\n    const { to, from, push, permanent } = this.props;\n    const code = permanent ? 301 : 302;\n    return (\n      <Status code={code}>\n        <ReactRouterRedirect to={to} from={from} push={push} />\n      </Status>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/routing.js","// IMPORTS\r\n\r\n/* NPM */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// HOC/decorator to listen to Redux store state\r\nimport { connect } from 'react-redux';\r\n\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\n// Styles\r\nimport css from './hotel.scss';\r\nimport faStyles from 'font-awesome/css/font-awesome.css';\r\n\r\n@connect(state => ({ hotels: state.hotels }))\r\nexport default class HotelList extends React.PureComponent {\r\n\r\n  getRange = (rating) => {\r\n    let starCount = [];\r\n    for(let i=0; i<5; i++) {\r\n      if (i<rating) starCount.push('star')\r\n      else starCount.push('star-o')\r\n    }\r\n    return (\r\n      <div className={css.rating}>\r\n        {starCount.map((star, index) => (\r\n          <FontAwesome\r\n            key={index}\r\n            name={star}\r\n            cssModule={faStyles}\r\n            style={{ color: 'yellow' }}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const hotels = this.props.hotels;\r\n    let content = \"Not found\";\r\n\r\n    if(hotels.length) {\r\n      content = (\r\n        <div>\r\n          {hotels.map(hotel => (\r\n            <div key={hotel.uuid} className={css.hotelItem} >\r\n              <div className={css.hotelCover} style={{background: \"url(\"+require(`static/img/${hotel.cover}`)+\") center center\"}}>\r\n                <div className={css.hotelInfo}>\r\n                  {hotel.name}\r\n                  {this.getRange(hotel.rating)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>{content}</div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/hotelList.js","var map = {\n\t\"./bellagio.jpg\": 211,\n\t\"./boston.jpg\": 212,\n\t\"./carlos.jpg\": 213,\n\t\"./poseidon.jpg\": 214,\n\t\"./safari.jpg\": 215\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 210;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/img ^\\.\\/.*$\n// module id = 210\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/bellagio.5031f12efee6b1822c6e8e609e8ef313.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/img/bellagio.jpg\n// module id = 211\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/boston.7b3e14f447a22ccf162f7b4c9f328119.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/img/boston.jpg\n// module id = 212\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/carlos.c89090db5b08dda24cf64436236b5c71.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/img/carlos.jpg\n// module id = 213\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/poseidon.1d9b736953400ba2189d2c8135f635b3.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/img/poseidon.jpg\n// module id = 214\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/safari.8d28fda3b2e5cfc1f6019fcbae29f6d0.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/img/safari.jpg\n// module id = 215\n// module chunks = 0","// IMPORTS\r\n\r\n/* NPM */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// HOC/decorator to listen to Redux store state\r\nimport { connect } from 'react-redux';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\n// Actions to add/remove event\r\nimport { findByName, sortByRaitingASK, sortByRaitingDESC } from 'src/actions';\r\n\r\n// Styles\r\nimport css from './hotel.scss';\r\nimport faStyles from 'font-awesome/css/font-awesome.css';\r\n\r\n@connect(state => ({ hotels: state.hotels }))\r\nexport default class HotelList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clearBtn: false,\r\n      sortByRaiting: 'ASK'\r\n    };\r\n  }\r\n  setRef = ref => {\r\n    this.ref = ref;\r\n  }\r\n\r\n  handleFindHotel = () => {\r\n    this.props.dispatch(findByName(this.ref.value));\r\n    if(this.ref.value) this.setState({ clearBtn: true })\r\n    else this.setState({ clearBtn: false })\r\n  }\r\n\r\n  handleClearSearch = () => {\r\n    this.ref.value = '';\r\n    this.props.dispatch(findByName(this.ref.value));\r\n    this.setState({ clearBtn: false })\r\n  }\r\n\r\n  handleSortByRaitingASK = () => {\r\n    this.props.dispatch(sortByRaitingASK());\r\n    this.setState({ sortByRaiting: 'DESK' })\r\n  }\r\n\r\n  handleSortByRaitingDESC = () => {\r\n    this.props.dispatch(sortByRaitingDESC());\r\n    this.setState({ sortByRaiting: 'ASK' })\r\n  }\r\n\r\n  render() {\r\n    const hotels = this.props.hotels;\r\n\r\n    return (\r\n      <div className={css.filterSection}>\r\n        <div className={css.searchSection}>\r\n          <input ref={this.setRef} type=\"text\"  onChange={() => this.handleFindHotel()} placeholder=\"Search...\"/>\r\n          {this.state.clearBtn && (<div className={css.searchBtn} onClick={this.handleClearSearch}>Clear</div>)}\r\n        </div>\r\n        <div className={css.sortSection}>\r\n          <div className={css.btn} onClick={() =>\r\n            { (this.state.sortByRaiting == 'ASK') ? this.handleSortByRaitingASK() : this.handleSortByRaitingDESC() }}>\r\n            Sort by <b>rating</b>\r\n            <FontAwesome\r\n              name='sort'\r\n              cssModule={faStyles}\r\n              className={css.sortIcon}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/filterSection.js","export function findByName(name) {\r\n  return {\r\n    type: 'FIND_BY_NAME',\r\n    name,\r\n  };\r\n}\r\n\r\nexport function sortByRaitingASK() {\r\n  return {\r\n    type: 'SORT_BY_RAITING_ASK',\r\n  };\r\n}\r\n\r\nexport function sortByRaitingDESC() {\r\n  return {\r\n    type: 'SORT_BY_RAITING_DESC',\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles.global.css\n// module id = 218\n// module chunks = 0","// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Apollo client library\nimport { createNetworkInterface, ApolloClient } from 'react-apollo';\n\n/* ReactQL */\n\n// Configuration\nimport config from 'kit/config';\n\n// Get environment, to figure out where we're running the GraphQL server\nimport { getServerURL } from 'kit/lib/env';\n\n// ----------------------\n\n// Helper function to create a new Apollo client, by merging in\n// passed options alongside any set by `config.setApolloOptions` and defaults\nexport function createClient(opt = {}) {\n  return new ApolloClient(Object.assign({\n    reduxRootSelector: state => state.apollo,\n  }, config.apolloClientOptions, opt));\n}\n\n// Wrap `createNetworkInterface` to attach middleware\nexport function getNetworkInterface(uri) {\n  const networkInterface = createNetworkInterface({\n    uri,\n    opts: config.apolloNetworkOptions,\n  });\n\n  // Attach middleware\n  networkInterface.use(config.apolloMiddleware.map(f => ({ applyMiddleware: f })));\n  networkInterface.useAfter(config.apolloAfterware.map(f => ({ applyAfterware: f })));\n\n  return networkInterface;\n}\n\n// Creates a new browser client\nexport function browserClient() {\n  // If we have an internal GraphQL server, we need to append it with a\n  // call to `getServerURL()` to add the correct host (in dev + production)\n  const uri = config.graphQLServer\n    ? `${getServerURL()}${config.graphQLEndpoint}` : config.graphQLEndpoint;\n\n  return createClient({\n    networkInterface: getNetworkInterface(uri),\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/apollo.js","/* eslint-disable import/prefer-default-export */\n\n// Environment-aware functions\n\n// Get the protocol://host:port of where the current server would bind\nexport function getServerURL(host = process.env.HOST, port = process.env.PORT, allowSSL = true) {\n  // Check for SSL\n  if (allowSSL && process.env.SSL_PORT) {\n    const stub = `https://${host || process.env.HOST}`;\n\n    // If we're on port 443, that's 'regular' SSL so no need to specify port\n    if (process.env.SSL_PORT === '443') return stub;\n    return `${stub}:${process.env.SSL_PORT}`;\n  }\n\n  // Plain HTTP\n  const stub = `http://${host || process.env.HOST}`;\n\n  // If we're on port 80, that's 'regular' HTTP so no need to specify port\n  if (port === '80') return stub;\n  return `${stub}:${port}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/env.js","/* eslint-disable no-underscore-dangle */\n\n/*\nCustom Redux store creation.  Along with the default Apollo store,\nwe can define custom reducers using `kit/config.addReducer()` which will\nbe available on the server and in the browser.\n\nStore state is wrapped by `seamless-immutable` to enforce a pattern of\nimmutability, to prevent weird side effects.\n*/\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport Immutable from 'seamless-immutable';\n\n/* Local */\nimport config from 'kit/config';\n\n// ----------------------\n\n// Detect if we're both in the browser, AND we have dehydrated state\nconst hasState = !!(!SERVER && window.__STATE__);\n\n// Helper function that 'unwinds' the `config.reducers` Map, and provides\n// the `reducer` function or `initialState` (wrapped in `seamless-immutable`)\n// depending on what we asked for\nfunction unwind(reducer = true) {\n  // Unwind `config.reducers`.  If we're looking for the `reducer`, we'll\n  // wrap this in a `defaultReducer` function that properly handles the Redux\n  // 'undefined' sentinel value, or calls 'real' reducer if it's not undefined.\n  //\n  // If we're not looking for reducers, it'll pull out the `initialState`\n  // variable instead, which we'll further process below\n  const r = Object.assign({},\n    ...[].concat([...config.reducers].map(arr => ({\n      [arr[0]]: reducer ? function defaultReducer(state, action) {\n        // If `state` === undefined, this is Redux sending a sentinel value\n        // to check our set-up.  So we'll send back a plain object to prove\n        // that we're properly handling our reducer\n        if (typeof state === 'undefined') return {};\n\n        // Otherwise, call our real reducer with the {state, action}\n        return arr[1].reducer(state, action);\n      } : arr[1].initialState,\n    }))),\n  );\n\n  // If this is a reducer, return at this point\n  if (reducer) return r;\n\n  // If not, we're looking for the state -- so let's map it and wrap the\n  // object in `seamless-immutable`, to avoid side-effects with Redux\n  return Object.assign({}, ...Object.keys(r).map(key => ({\n    [key]: Immutable((hasState && (window.__STATE__[key])) || r[key]),\n  })));\n}\n\nexport default function createNewStore(apolloClient) {\n  const store = createStore(\n    // By default, we'll use just the apollo reducer.  We can easily add our\n    // own here, for global store management outside of Apollo\n    combineReducers({\n      apollo: apolloClient.reducer(),\n      ...unwind(),\n    }),\n    // Initial server state, provided by the server.\n    {\n      apollo: (hasState && window.__STATE__.apollo) || {},\n      ...unwind(false),\n    },\n    compose(\n      applyMiddleware(\n        apolloClient.middleware(),\n        thunkMiddleware,\n      ),\n      // Enable Redux Devtools on the browser, for easy state debugging\n      // eslint-disable-next-line no-underscore-dangle\n      (!SERVER && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    ),\n  );\n\n  return store;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/redux.js","// Simple class to act as a singleton for app-wide configuration.\n\n// We'll start with a common config that can be extended separately by the\n// server/client, to provide environment-specific functionality\nclass Common {\n  constructor() {\n    // Store reducers in a `Map`, for easy key retrieval\n    this.reducers = new Map();\n\n    // Apollo (middle|after)ware\n    this.apolloMiddleware = [];\n    this.apolloAfterware = [];\n    this.apolloNetworkOptions = {};\n    this.apolloClientOptions = {};\n\n    // GraphQL endpoint.  This needs setting via either `config.enableGraphQLServer()`\n    // or `config.setGraphQLEndpoint()`\n    this.graphQLEndpoint = null;\n\n    // Set to true if we're using an internal GraphQL server\n    this.graphQLServer = false;\n  }\n\n  /* REDUX */\n\n  // Adds a new reducer.  Accepts a `key` string, a `reducer` function, and a\n  // (by default empty) `initialState` object, which will ultimately become immutable\n  addReducer(key, reducer, initialState = {}) {\n    if (typeof reducer !== 'function') {\n      throw new Error(`Can't add reducer for '${key}' - reducer must be a function`);\n    }\n    this.reducers.set(key, {\n      reducer,\n      initialState,\n    });\n  }\n\n  /* GRAPHQL */\n\n  // Enables internal GraphQL server.  Default GraphQL and GraphiQL endpoints\n  // can be overridden\n  enableGraphQLServer(endpoint = '/graphql', graphiQL = true) {\n    this.graphQLServer = true;\n    this.graphQLEndpoint = endpoint;\n    this.graphiQL = graphiQL;\n  }\n\n  // Set an external GraphQL URI for use with Apollo\n  setGraphQLEndpoint(uri, graphiQL = true) {\n    this.graphQLEndpoint = uri;\n    this.graphiQL = graphiQL;\n  }\n\n  // Register Apollo middleware function\n  addApolloMiddleware(middlewareFunc) {\n    this.apolloMiddleware.push(middlewareFunc);\n  }\n\n  // Register Apollo afterware function\n  addApolloAfterware(afterwareFunc) {\n    this.apolloAfterware.push(afterwareFunc);\n  }\n\n  // Apollo Client options.  These will be merged in with the `createClient`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloClientOptions(opt = {}) {\n    this.apolloClientOptions = opt;\n  }\n\n  // Apollo Network options.  These will be merged in with the `createNetworkInterface`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloNetworkOptions(opt = {}) {\n    this.apolloNetworkOptions = opt;\n  }\n}\n\n// Placeholder for the class we'll attach\nlet Config;\n\n// Server Config extensions.  This is wrapped in a `SERVER` block to avoid\n// adding unnecessary functionality to the client bundle.  Every byte counts!\nif (SERVER) {\n  Config = class ServerConfig extends Common {\n    constructor() {\n      super();\n      // Create a set for routes -- to retrieve based on insertion order\n      this.routes = new Set();\n\n      // Koa application function. But default, this is null\n      this.koaAppFunc = null;\n\n      // Flag for setting whether plain HTTP should be disabled\n      this.enableHTTP = true;\n\n      // Force SSL. Rewrites all non-SSL queries to SSL.  False, by default.\n      this.enableForceSSL = false;\n\n      // Options for enabling SSL. By default, this is null. If SSL is enabled\n      // in userland, this would instead hold an object of options\n      this.sslOptions = null;\n\n      // Custom middleware -- again, based on insertion order\n      this.middleware = new Set();\n\n      // GraphQL schema (if we're using an internal server)\n      this.graphQLSchema = null;\n\n      // Attach a GraphiQL IDE endpoint to our server?  By default - no.  If\n      // this === true, this will default to `/graphql`.  If it's a string, it'll\n      // default to the string value\n      this.graphiQL = false;\n\n      // Enable body parsing by default.  Leave `koa-bodyparser` opts as default\n      this.enableBodyParser = true;\n      this.bodyParserOptions = {};\n\n      // CORS options for `koa-cors`\n      this.corsOptions = {};\n    }\n\n    /* WEB SERVER / SSR */\n\n    // Get access to Koa's `app` instance, for adding custom instantiation\n    // or doing something that's not covered by other functions\n    getKoaApp(func) {\n      this.koaAppFunc = func;\n    }\n\n    // Enable SSL. Normally, you'd use an upstream proxy like Nginx to handle\n    // SSL. But if you want to run a 'bare' Koa HTTPS web server, you can pass\n    // in the certificate details here and it'll respond to SSL requests\n    enableSSL(opt) {\n      // At a minimum, we should have `key` and `cert` -- check for those\n      if (typeof opt !== 'object' || !opt.key || !opt.cert) {\n        throw new Error('Cannot enable SSL. Missing `key` and/or `cert`');\n      }\n      this.sslOptions = opt;\n    }\n\n    // Force SSL. Rewrites all non-SSL queries to SSL. Any options here are\n    // passed to `koa-sslify`, the SSL enforcement middleware\n    forceSSL(opt = {}) {\n      this.enableForceSSL = opt;\n    }\n\n    // Disable plain HTTP.  Note this should only be used if you've also set\n    // `enableSSL()` and you don't want dual-HTTP+SSL config\n    disableHTTP() {\n      this.enableHTTP = false;\n    }\n\n    // Disable the optional `koa-bodyparser`, to prevent POST data being sent to\n    // each request.  By default, body parsing is enabled.\n    disableBodyParser() {\n      this.enableBodyParser = false;\n    }\n\n    setBodyParserOptions(opt = {}) {\n      this.bodyParserOptions = opt;\n    }\n\n    // 404 handler for the server.  By default, `kit/entry/server.js` will\n    // simply return a 404 status code without modifying the HTML render.  By\n    // setting a handler here, this will be returned instead\n    set404Handler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('404 handler must be a function');\n      }\n      this.handler404 = func;\n    }\n\n    // Error handler.  If this isn't defined, the server will simply return a\n    // 'There was an error. Please try again later.' message, and log the output\n    // to the console.  Override that behaviour by passing a (e, ctx, next) -> {} func\n    setErrorHandler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('Error handler must be a function');\n      }\n      this.errorHandler = func;\n    }\n\n    // Add custom middleware.  This should be an async func, for use with Koa\n    addMiddleware(middlewareFunc) {\n      this.middleware.add(middlewareFunc);\n    }\n\n    // Adds a custom server route to attach to our Koa router\n    addRoute(method, route, ...handlers) {\n      this.routes.add({\n        method,\n        route,\n        handlers,\n      });\n    }\n\n    // Adds custom GET route\n    addGetRoute(route, ...handlers) {\n      this.addRoute('get', route, ...handlers);\n    }\n\n    // Adds custom POST route\n    addPostRoute(route, ...handlers) {\n      this.addRoute('post', route, ...handlers);\n    }\n\n    // Adds custom PUT route\n    addPutRoute(route, ...handlers) {\n      this.addRoute('put', route, ...handlers);\n    }\n\n    // Adds custom PATCH route\n    addPatchRoute(route, ...handlers) {\n      this.addRoute('patch', route, ...handlers);\n    }\n\n    // Adds custom DELETE route\n    addDeleteRoute(route, ...handlers) {\n      this.addRoute('delete', route, ...handlers);\n    }\n\n    // Set the GraphQL schema. This should only be called on the server, otherwise\n    // the bundle size passed by the `schema` object will be unnecessarily inflated\n    setGraphQLSchema(schema) {\n      this.graphQLSchema = schema;\n    }\n\n    // CORS options, for `koa-cors` instantiation\n    setCORSOptions(opt = {}) {\n      this.corsOptions = opt;\n    }\n  };\n} else {\n  // For the client config, we'll extend `Common` by default -- but if we need\n  // anything unique to the browser in the future, we'd add it here...\n  Config = class ClientConfig extends Common {};\n}\n\n// Since there's only one `Config` instance globally, we'll create the new\n// instance here and export it.  This will then provide any subsequent imports\n// with the same object, so we can add settings to a common config\nexport default new Config();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/config.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"content\":\"content-2VPQHqsWcFYcoqtr8QBr8w\",\"hotelItem\":\"hotelItem-lZdK4RxhVnOEBqBfuo_tP\",\"hotelCover\":\"hotelCover-qbk-HzIUm6N5vIRKyKF4B\",\"hotelInfo\":\"hotelInfo-GXmYR35-sK5PLVOGOubRf\",\"searchSection\":\"searchSection-2KdqQgriloRir7SOHml9Tu\",\"sortSection\":\"sortSection-1fvoLMuBRknThGxO6zIq6E\",\"filterSection\":\"filterSection-1P7aaQtCE2-zAsYWNsD0XD\",\"btn\":\"btn-3X7vTkeBV0ClrGHNzNYLgD\",\"searchBtn\":\"searchBtn-2-FFXfU8UbxsfPSBdUzQtx\",\"sortIcon\":\"sortIcon-fhjBdQYCvqSSig-kwpoBe\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/hotel.scss\n// module id = 46\n// module chunks = 0","const uuid = require('uuid');\r\n\r\nexport default [\r\n  {\r\n    \"uuid\": uuid.v4(),\r\n    \"name\": \"Carlos-Hotel\",\r\n    \"rating\": 2,\r\n    \"cover\": \"carlos.jpg\"\r\n  },\r\n  {\r\n    \"uuid\": uuid.v4(),\r\n    \"name\": \"Bellagio-Hotel\",\r\n    \"rating\": 5,\r\n    \"cover\": \"bellagio.jpg\"\r\n  },\r\n {\r\n    \"uuid\": uuid.v4(),\r\n    \"name\": \"Boston-Hotel\",\r\n    \"rating\": 4,\r\n    \"cover\": \"boston.jpg\"\r\n  },\r\n\r\n  {\r\n    \"uuid\": uuid.v4(),\r\n    \"name\": \"Poseidon-Hotel\",\r\n    \"rating\": 3,\r\n    \"cover\": \"poseidon.jpg\"\r\n  },\r\n  {\r\n    \"uuid\": \"uuid5\",\r\n    \"name\": \"Safari-Hotel\",\r\n    \"rating\": 5,\r\n    \"cover\": \"safari.jpg\"\r\n  }\r\n]\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/data.js","// Browser entry point, for Webpack.  We'll grab the browser-flavoured\n// versions of React mounting, routing etc to hook into the DOM\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Enable async/await and generators, cross-browser\nimport 'regenerator-runtime/runtime';\n\n// Patch global.`fetch` so that Apollo calls to GraphQL work\nimport 'isomorphic-fetch';\n\n// React parts\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Browser routing\nimport { BrowserRouter } from 'react-router-dom';\n\n// Apollo Provider. This HOC will 'wrap' our React component chain\n// and handle injecting data down to any listening component\nimport { ApolloProvider } from 'react-apollo';\n\n/* ReactQL */\n\n// Root component.  This is our 'entrypoint' into the app.  If you're using\n// the ReactQL starter kit for the first time, `src/app.js` is where\n// you can start editing to add your own code.  Note:  This first is imported\n// first, since it sets up our app's settings\nimport App from 'src/app';\n\n// Grab the shared Apollo Client\nimport { browserClient } from 'kit/lib/apollo';\n\n// Custom redux store creator.  This will allow us to create a store 'outside'\n// of Apollo, so we can apply our own reducers and make use of the Redux dev\n// tools in the browser\nimport createNewStore from 'kit/lib/redux';\n\n// ----------------------\n\n// Create a new browser Apollo client\nconst client = browserClient();\n\n// Create a new Redux store\nconst store = createNewStore(client);\n\n// Create the 'root' entry point into the app.  If we have React hot loading\n// (i.e. if we're in development), then we'll wrap the whole thing in an\n// <AppContainer>.  Otherwise, we'll jump straight to the browser router\nfunction doRender() {\n  ReactDOM.hydrate(\n    <Root />,\n    document.getElementById('main'),\n  );\n}\n\n// The <Root> component.  We'll run this as a self-contained function since\n// we're using a bunch of temporary vars that we can safely discard.\n//\n// If we have hot reloading enabled (i.e. if we're in development), then\n// we'll wrap the whole thing in <AppContainer> so that our views can respond\n// to code changes as needed\nconst Root = (() => {\n  // Wrap the component hierarchy in <BrowserRouter>, so that our children\n  // can respond to route changes\n  const Chain = () => (\n    <ApolloProvider store={store} client={client}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n\n  // React hot reloading -- only enabled in development.  This branch will\n  // be shook from production, so we can run a `require` statement here\n  // without fear that it'll inflate the bundle size\n  if (module.hot) {\n    // <AppContainer> will respond to our Hot Module Reload (HMR) changes\n    // back from WebPack, and handle re-rendering the chain as needed\n    const AppContainer = require('react-hot-loader').AppContainer;\n\n    // Start our 'listener' at the root component, so that any changes that\n    // occur in the hierarchy can be captured\n    module.hot.accept('src/app', () => {\n      // Refresh the entry point of our app, to get the changes.\n\n      // eslint-disable-next-line\n      require('src/app').default;\n\n      // Re-render the hierarchy\n      doRender();\n    });\n\n    return () => (\n      <AppContainer>\n        <Chain />\n      </AppContainer>\n    );\n  }\n  return Chain;\n})();\n\ndoRender();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/browser.js"],"sourceRoot":""}